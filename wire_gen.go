// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
	"gorm.io/gorm"
	"main/config"
	"main/handlers"
	"main/repository"
	"main/router"
	"main/services"
	"main/websocket"
)

// Injectors from wire.go:

func InitializeApp(cfg *config.Config, db *gorm.DB, hub *websocket.Hub) *fiber.App {
	userRepository := repository.NewUserRepository(db)
	chatRepository := repository.NewChatRepository(db)
	roomRepository := repository.NewRoomRepository(db)
	uploadService := services.NewUploadService(cfg)
	roomService := services.NewRoomService(roomRepository, userRepository, uploadService)
	chatHandler := handlers.NewChatHandler(hub, userRepository, chatRepository, roomService)
	tokenRepository := repository.NewTokenRepository(db)
	jwtService := services.NewJWTService(cfg)
	authService := services.NewAuthService(userRepository, tokenRepository, jwtService)
	authHandler := handlers.NewAuthHandler(authService)
	userService := services.NewUserService(userRepository, uploadService)
	userHandler := handlers.NewUserHandler(userService)
	roomHandler := handlers.NewRoomHandler(roomService)
	uploadHandler := handlers.NewUploadHandler(uploadService)
	app := router.NewRouter(chatHandler, authHandler, userHandler, roomHandler, uploadHandler, tokenRepository, cfg)
	return app
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewUserRepository, repository.NewTokenRepository, repository.NewRoomRepository, repository.NewChatRepository)

var serviceSet = wire.NewSet(services.NewJWTService, services.NewAuthService, services.NewUserService, services.NewRoomService, services.NewUploadService)

var handlerSet = wire.NewSet(handlers.NewAuthHandler, handlers.NewChatHandler, handlers.NewUserHandler, handlers.NewRoomHandler, handlers.NewUploadHandler)
